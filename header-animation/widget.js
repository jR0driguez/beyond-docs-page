define(["exports", "@beyond-js/widgets/render/ts", "@beyond-js/kernel/styles/ts", "svelte/internal", "@beyond-js/svelte-widgets/controllers/ts", "svelte", "@beyond-js/kernel/bundle/ts"], function (_exports2, dependency_0, dependency_1, dependency_2, dependency_3, dependency_4, dependency_5) {
  "use strict";

  Object.defineProperty(_exports2, "__esModule", {
    value: true
  });
  _exports2.hmr = _exports2.Controller = void 0;

  const {
    Bundle: __Bundle,
    externals
  } = require('@beyond-js/kernel/bundle/ts');

  const __pkg = new __Bundle("@beyond/docs/header-animation/widget").package();

  externals.register(new Map([["svelte/internal", dependency_2], ["svelte", dependency_4]]));

  require('@beyond-js/widgets/render/ts').widgets.register([{
    "name": "header-animation",
    "id": "@beyond/docs/header-animation/widget"
  }]);

  require('@beyond-js/kernel/styles/ts').styles.register('@beyond/docs/header-animation/widget');

  const ims = new Map();
  /*******************************
  INTERNAL MODULE: ./widget.svelte
  *******************************/

  ims.set('./widget.svelte', {
    hash: 2308024034,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;

      var _internal = require("svelte/internal");

      var _svelte = require("svelte");
      /* generated by Svelte v3.48.0 */


      function create_fragment(ctx) {
        let figure;
        let div;
        let svg;
        let g2;
        let g0;
        let path0;
        let g1;
        let path1;
        let mounted;
        let dispose;
        return {
          c() {
            figure = (0, _internal.element)("figure");
            div = (0, _internal.element)("div");
            svg = (0, _internal.svg_element)("svg");
            g2 = (0, _internal.svg_element)("g");
            g0 = (0, _internal.svg_element)("g");
            path0 = (0, _internal.svg_element)("path");
            g1 = (0, _internal.svg_element)("g");
            path1 = (0, _internal.svg_element)("path");
            (0, _internal.attr)(path0, "class", "st0");
            (0, _internal.attr)(path0, "d", "M8.2-38.4c-0.5,2.1-0.8,4-0.7,5.1C7.6-32.1,8-32,8.7-32.9c0.6-1,1.1-2.2,1.5-3.4C9.4-36.9,8.8-37.6,8.2-38.4z\r\n\t\t\t M20.2-35.2c-0.9,0.4-1.8,0.7-2.8,0.8c-0.3,1.2-0.4,2.5-0.4,3.7c0.1,1.1,0.5,1.2,1.2,0.3C18.9-31.3,19.6-33.2,20.2-35.2z M12.4-35\r\n\t\t\tc-0.7,3-1.2,5.8-1.3,7.3c-0.1,1.7,0.4,1.8,1.2,0.3c0.7-1.4,1.6-4,2.6-7C14.1-34.4,13.2-34.7,12.4-35L12.4-35z");
            (0, _internal.attr)(g0, "id", "beyond-ales");
            (0, _internal.attr)(g0, "transform", "translate(0 58.014)");
            (0, _internal.attr)(path1, "class", "st1");
            (0, _internal.attr)(path1, "d", "M16.4,5.9c-0.2,0-0.4,0-0.6,0c-4.5,0.2-8,4-7.8,8.5s4,8,8.5,7.8c4.5-0.2,8-4,7.8-8.5\r\n\t\t\tC24.1,9.5,20.6,6,16.4,5.9z M16.3,7.8c0.5,0,1,0.1,1.4,0.2c3.4,0.9,5.4,4.4,4.5,7.9c-0.9,3.4-4.4,5.4-7.9,4.5\r\n\t\t\tC11,19.5,8.9,16,9.8,12.5c0.7-2.7,3.2-4.6,6-4.7C16,7.8,16.2,7.8,16.3,7.8L16.3,7.8z M19.5,0.3c-0.5,0-1,0.2-1.5,0.4\r\n\t\t\tC17.2,1,16.7,1.4,16.2,2c-0.8,0.9-1.5,1.8-2.2,2.9c0.9-0.2,1.7-0.3,2.7-0.2c0.3-0.5,0.7-0.9,1.1-1.4C19.1,2,20.1,1.9,20.5,4\r\n\t\t\tc0.1,0.6,0.2,1.2,0.3,1.8c0.8,0.4,1.5,1,2.2,1.7c0-1.3-0.1-2.6-0.4-3.8c-0.2-0.7-0.5-1.4-0.9-2.1c-0.4-0.5-0.9-1.1-1.6-1.3\r\n\t\t\tC19.8,0.3,19.6,0.3,19.5,0.3L19.5,0.3z M16.4,5.7c-0.2,0-0.4,0-0.6,0c-4.6,0.2-8.2,4.1-8,8.7c0.2,4.6,4.1,8.2,8.7,8s8.2-4.1,8-8.7\r\n\t\t\tC24.3,9.4,20.7,5.9,16.4,5.7L16.4,5.7z M16.3,7.6c0.5,0,1,0.1,1.4,0.2c3.5,1,5.7,4.6,4.6,8.1c-0.9,3.5-4.5,5.5-8,4.6\r\n\t\t\ts-5.5-4.5-4.6-8c0.7-2.8,3.2-4.7,6.1-4.8C16,7.6,16.2,7.6,16.3,7.6L16.3,7.6z");
            (0, _internal.attr)(g1, "id", "beyond-circle");
            (0, _internal.attr)(svg, "xmlns", "http://www.w3.org/2000/svg");
            (0, _internal.attr)(svg, "x", "0px");
            (0, _internal.attr)(svg, "y", "0px");
            (0, _internal.attr)(svg, "viewBox", "0 0 32 32");
            (0, _internal.attr)(div, "class", "beyond__icon");
          },

          m(target, anchor) {
            (0, _internal.insert)(target, figure, anchor);
            (0, _internal.append)(figure, div);
            (0, _internal.append)(div, svg);
            (0, _internal.append)(svg, g2);
            (0, _internal.append)(g2, g0);
            (0, _internal.append)(g0, path0);
            (0, _internal.append)(g2, g1);
            (0, _internal.append)(g1, path1);
            /*svg_binding*/

            ctx[3](svg);

            if (!mounted) {
              dispose = [(0, _internal.listen)(svg, "mousemove",
              /*onMouseMove*/
              ctx[1]), (0, _internal.listen)(svg, "mouseleave",
              /*onMouseLeave*/
              ctx[2])];
              mounted = true;
            }
          },

          p: _internal.noop,
          i: _internal.noop,
          o: _internal.noop,

          d(detaching) {
            if (detaching) (0, _internal.detach)(figure);
            /*svg_binding*/

            ctx[3](null);
            mounted = false;
            (0, _internal.run_all)(dispose);
          }

        };
      }

      function instance($$self, $$props, $$invalidate) {
        let target;
        let originalMouseX = 0;
        let originalMouseY = 0;
        let mouseCurrentX = 0;
        let mouseCurrentY = 0;
        let x, y, clientWidth, middleX;
        (0, _svelte.onMount)(() => {
          console.log("on mount", target);
          middleX = clientWidth / 2;
          clientWidth = target.clientWidth;
          y = target.getBoundingClientRect();
          x = target.getBoundingClientRect();
        });

        const onMouseMove = event => {
          const {
            pageY,
            pageX
          } = event;
          const yDirection = pageY > originalMouseY ? 'bottom' : originalMouseY === pageY ? 'same' : 'top';
          const xDirection = pageX > originalMouseX ? 'right' : originalMouseX === pageX ? 'same' : 'left';
          originalMouseX = pageX;
          originalMouseY = pageY;
          const adjacentLeg = pageX - middleX;
          const oppositeLeg = pageY - y;
          const tan = oppositeLeg / adjacentLeg;
          const atan = Math.atan(tan) * (180 / Math.PI);
          const xQuadrant = adjacentLeg > 0 ? 1 : 2;
          const yQuadrant = oppositeLeg > 0 ? 2 : 1;
          const quadrants = [{
            x: 2,
            y: 1,
            method: () => atan - 360
          }, {
            x: 2,
            y: 1,
            method: () => -90 - oppositeLeg
          }, {
            x: 1,
            y: 1,
            method: () => atan - 360
          }, {
            x: 2,
            y: 2,
            method: () => -90 + 2 * atan
          }, {
            x: 1,
            y: 2,
            method: () => atan
          }];
          const index = quadrants.findIndex(item => item.x === xQuadrant && item.y === yQuadrant);

          if (xDirection !== 'same') {
            mouseCurrentX += xDirection === 'left' ? -5 : 5;
            mouseCurrentX = mouseCurrentX > 70 ? 70 : mouseCurrentX < -70 ? -70 : mouseCurrentX;
            $$invalidate(0, target.style.left = `${mouseCurrentX}px`, target);
          }

          if (yDirection !== 'same') {
            mouseCurrentY += yDirection === 'top' ? -5 : 5;
            mouseCurrentY = mouseCurrentY > 70 ? 70 : mouseCurrentY < -70 ? -70 : mouseCurrentY;
            $$invalidate(0, target.style.top = `${mouseCurrentY}px`, target);
          }

          $$invalidate(0, target.style.transform = `rotate(${quadrants[index].method()}deg)`, target);
        };

        const onMouseLeave = event => {
          const getAngle = value => {
            if (value === 'none') {
              return;
            }

            let values = value.split('(')[1];
            values = values.split(')')[0];
            values = values.split(',');
            let a = values[0];
            let b = values[1];
            return Math.round(Math.atan2(b, a) * (180 / Math.PI));
          };

          let currentAngle = getAngle(window.getComputedStyle(target, null).getPropertyValue('transform'));
          if (!currentAngle) return;

          const rollback = (position, current) => {
            const interval = window.setInterval(() => {
              current = current > 0 ? current - 1 : current + 1;
              $$invalidate(0, target.style[position] = current, target);
              if (current === 0) clearInterval(interval);
            }, 0);
          };

          rollback('left', parseInt(target.style.left.replace('px', '')));
          rollback('top', parseInt(target.style.top.replace('px', '')));
          const interval = window.setInterval(() => {
            currentAngle = currentAngle > 0 ? currentAngle - 1 : currentAngle + 1;
            $$invalidate(0, target.style.transform = `rotate(${currentAngle}deg)`, target);

            if (currentAngle === 0) {
              clearInterval(interval);
              return;
            }
          }, 0);
        };

        function svg_binding($$value) {
          _internal.binding_callbacks[$$value ? 'unshift' : 'push'](() => {
            target = $$value;
            $$invalidate(0, target);
          });
        }

        return [target, onMouseMove, onMouseLeave, svg_binding];
      }

      class Component extends _internal.SvelteComponent {
        constructor(options) {
          super();
          (0, _internal.init)(this, options, instance, create_fragment, _internal.safe_not_equal, {});
        }

      }

      var _default = Component;
      exports.default = _default;
    }
  });
  /****************************
  INTERNAL MODULE: ./controller
  ****************************/

  ims.set('./controller', {
    hash: 1479799381,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Controller = void 0;

      var _ts = require("@beyond-js/svelte-widgets/controllers/ts");

      var _widget = require("./widget.svelte");
      /*bundle*/


      class Controller extends _ts.SvelteWidgetController {
        get Widget() {
          return _widget.default;
        }

      }

      exports.Controller = Controller;
    }
  }); // Exports managed by beyond bundle objects

  __pkg.exports.managed = function (require, _exports) {
    _exports.Controller = require('./controller').Controller;
  };

  let Controller; // Module exports

  _exports2.Controller = Controller;

  __pkg.exports.process = function (require) {
    _exports2.Controller = Controller = require('./controller').Controller;
  };

  const hmr = new function () {
    this.on = (event, listener) => __pkg.hmr.on(event, listener);

    this.off = (event, listener) => __pkg.hmr.off(event, listener);
  }();
  _exports2.hmr = hmr;

  __pkg.initialise(ims);
});